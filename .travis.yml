---

sudo: required

dist: trusty

language: python

python:
  - 2.7

services:
  - docker

env:
  global:
    - ANSIBLE_FORCE_COLOR: true
    - ANSIBLE_LOG_PATH: "./ansible.log"
    - ANSIBLE_ROLES_PATH: "../"
    - DOCKER_NAME: "$(cat /dev/urandom | base64 | head -c 8)"
  matrix:
    - DOCKER_IMAGE: "ubuntu"
      DOCKER_TAG: "14.04"
      DOCKER_OPTS: "--privileged -v /var/run/docker.sock:/var/run/docker.sock"
      DOCKER_INIT: "/sbin/init"
    - DOCKER_IMAGE: "ubuntu"
      DOCKER_TAG: "16.04"
      DOCKER_OPTS: "--privileged -v /var/run/docker.sock:/var/run/docker.sock"
      DOCKER_INIT: "/lib/systemd/systemd"
    - DOCKER_IMAGE: "centos"
      DOCKER_TAG: "6"
      DOCKER_OPTS: "--privileged -v /var/run/docker.sock:/var/run/docker.sock"
      DOCKER_INIT: "/sbin/init"
    - DOCKER_IMAGE: "centos/systemd"
      DOCKER_TAG: "latest"
      DOCKER_OPTS: "--privileged -v /var/run/docker.sock:/var/run/docker.sock -v /sys/fs/cgroup:/sys/fs/cgroup:ro --tmpfs /run"
      DOCKER_INIT: "/sbin/init"

before_install:
  - pip install --upgrade --upgrade-strategy only-if-needed ansible docker-py docker-compose
  - docker pull $DOCKER_IMAGE:$DOCKER_TAG
  - docker run -itd --name $DOCKER_NAME $DOCKER_OPTS $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_INIT

install:
  - pip install -r ansible-requirements.txt
  - ansible-galaxy install -r requirements.yml

script:
  - yamllint -c .yamllint .
  - ansible-playbook -i $DOCKER_NAME, -c docker tests/test.yml --syntax-check
  - ansible-playbook -i $DOCKER_NAME, -c docker tests/test.yml --diff --verbose
  - ansible-playbook -i $DOCKER_NAME, -c docker tests/test.yml --diff --verbose
  - tail -n 1 ansible.log | grep -Eq 'changed=0 +unreachable=0 +failed=0'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
